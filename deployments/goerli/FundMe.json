{
  "address": "0x4F630e81FB6D5EaA2F7f2848fa52d37117758caA",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x557040f2ab10a6e4150ff6c0bbc057f8a729e8c7b20ade7245e2306d31cc9d2e",
  "receipt": {
    "to": null,
    "from": "0xC5CA66C7f13fcc93e488497Eb14462FC0B762E18",
    "contractAddress": "0x4F630e81FB6D5EaA2F7f2848fa52d37117758caA",
    "transactionIndex": 52,
    "gasUsed": "1106986",
    "logsBloom": "0x
    "blockHash": "0xc8235b913a0b9b369f0559527d533b106c6d43f99c40b206a022523bb61706d3",
    "transactionHash": "0x557040f2ab10a6e4150ff6c0bbc057f8a729e8c7b20ade7245e2306d31cc9d2e",
    "logs": [],
    "blockNumber": 8555400,
    "cumulativeGasUsed": "6468381",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd4a33860578de61dbabdc8bfdb98fd742fa7028e"
  ],
  "numDeployments": 4,
  "solcInputHash": "8bcd5c29d04d8f373d6965479e924cdb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n  using PriceConverter for uint256;\\n\\n  mapping(address => uint256) private s_addressToAmountFunded;\\n  address[] private s_funders;\\n\\n  // Could we make this constant?  /* hint: no! We should make it immutable! */\\n  address private immutable i_owner;\\n  uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n  AggregatorV3Interface public s_priceFeed;\\n\\n  constructor(address s_priceFeedAddress) {\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n  }\\n\\n  function fund() public payable {\\n    require(\\n      msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n      \\\"You need to spend more ETH!\\\"\\n    );\\n    // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n    s_addressToAmountFunded[msg.sender] += msg.value;\\n    s_funders.push(msg.sender);\\n  }\\n\\n  function getVersion() public view returns (uint256) {\\n    // ETH/USD price feed address of Goerli Network.\\n    AggregatorV3Interface s_priceFeed = AggregatorV3Interface(\\n      0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e\\n    );\\n    return s_priceFeed.version();\\n  }\\n\\n  modifier onlyOwner() {\\n    // require(msg.sender == owner);\\n    if (msg.sender != i_owner) revert FundMe__NotOwner();\\n    _;\\n  }\\n\\n  function withdraw() public onlyOwner {\\n    for (\\n      uint256 funderIndex = 0;\\n      funderIndex < s_funders.length;\\n      funderIndex++\\n    ) {\\n      address funder = s_funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n\\n    (bool callSuccess, ) = payable(msg.sender).call{\\n      value: address(this).balance\\n    }(\\\"\\\");\\n    require(callSuccess, \\\"Call failed\\\");\\n  }\\n\\n  function cheaperWithdraw() public payable onlyOwner {\\n    address[] memory funders = s_funders;\\n    for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n      address funder = funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n    (bool success, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n    require(success);\\n  }\\n\\n  // Explainer from: https://solidity-by-example.org/fallback/\\n  // Ether is sent to contract\\n  //      is msg.data empty?\\n  //          /   \\\\\\n  //         yes  no\\n  //         /     \\\\\\n  //    receive()?  fallback()\\n  //     /   \\\\\\n  //   yes   no\\n  //  /        \\\\\\n  //receive()  fallback()\\n\\n  function getOwner() public view returns (address) {\\n    return i_owner;\\n  }\\n\\n  function getFunder(uint256 index) public view returns (address) {\\n    return s_funders[index];\\n  }\\n\\n  function getAddressToAmountFunded(\\n    address funder\\n  ) public view returns (uint256) {\\n    return s_addressToAmountFunded[funder];\\n  }\\n\\n  function getPriceFeed() public view returns (AggregatorV3Interface) {\\n    return s_priceFeed;\\n  }\\n}\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\",\"keccak256\":\"0xb46954018f8600ebdd19e2c735641b08bd8ce11483bc5412904d53ac1fbc5e6d\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport '@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol';\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n  // We could make this public, but then we'd have to deploy it\\r\\n  function getPrice(\\r\\n    AggregatorV3Interface priceFeed\\r\\n  ) internal view returns (uint256) {\\r\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n    // ETH/USD rate in 18 digit\\r\\n    return uint256(answer * 10000000000);\\r\\n    // or (Both will do the same thing)\\r\\n    // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\r\\n  }\\r\\n\\r\\n  // 1000000000\\r\\n  function getConversionRate(\\r\\n    uint256 ethAmount,\\r\\n    AggregatorV3Interface priceFeed\\r\\n  ) internal view returns (uint256) {\\r\\n    uint256 ethPrice = getPrice(priceFeed);\\r\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n    // or (Both will do the same thing)\\r\\n    // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\r\\n    // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n    return ethAmountInUsd;\\r\\n  }\\r\\n}\\r\\n\",\"keccak256\":\"0x2386b3da1c04f082af9cc0ede5ee6a16f0c9660c5c7253b65c78c82c986f4712\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200142e3803806200142e833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6112a862000186600039600081816103200152818161056f015281816106f901526108ef01526112a86000f3fe6080604052600436106100915760003560e01c8063893d20e811610059578063893d20e81461016b5780639e87a5cd14610196578063b60d4288146101c1578063be2693f0146101cb578063d7b4750c146101d557610091565b80630343fb25146100965780630d8e6e2c146100d35780630ec3b027146100fe5780633ccfd60b146101295780636b69a59214610140575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610bb3565b610212565b6040516100ca9190610bf9565b60405180910390f35b3480156100df57600080fd5b506100e861025a565b6040516100f59190610bf9565b60405180910390f35b34801561010a57600080fd5b506101136102f8565b6040516101209190610c73565b60405180910390f35b34801561013557600080fd5b5061013e61031e565b005b34801561014c57600080fd5b5061015561055e565b6040516101629190610bf9565b60405180910390f35b34801561017757600080fd5b5061018061056b565b60405161018d9190610c9d565b60405180910390f35b3480156101a257600080fd5b506101ab610593565b6040516101b89190610c73565b60405180910390f35b6101c96105bd565b005b6101d36106f7565b005b3480156101e157600080fd5b506101fc60048036038101906101f79190610ce4565b610985565b6040516102099190610c9d565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073d4a33860578de61dbabdc8bfdb98fd742fa7028e90508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156102ba57600080fd5b505afa1580156102ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f29190610d26565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a3576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561044e576000600182815481106103c9576103c8610d53565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044690610db1565b9150506103a6565b50600067ffffffffffffffff81111561046a57610469610dfa565b5b6040519080825280602002602001820160405280156104985781602001602082028036833780820191505090505b50600190805190602001906104ae929190610aa9565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104d590610e5a565b60006040518083038185875af1925050503d8060008114610512576040519150601f19603f3d011682016040523d82523d6000602084013e610517565b606091505b505090508061055b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055290610ecc565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006105fc600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109cd90919063ffffffff16565b101561063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063490610f38565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461068b9190610f58565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461077c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561080057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107b6575b5050505050905060005b815181101561088a57600082828151811061082857610827610d53565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061088290610db1565b91505061080a565b50600067ffffffffffffffff8111156108a6576108a5610dfa565b5b6040519080825280602002602001820160405280156108d45781602001602082028036833780820191505090505b50600190805190602001906108ea929190610aa9565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161093190610e5a565b60006040518083038185875af1925050503d806000811461096e576040519150601f19603f3d011682016040523d82523d6000602084013e610973565b606091505b505090508061098157600080fd5b5050565b60006001828154811061099b5761099a610d53565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109d983610a09565b90506000670de0b6b3a764000085836109f29190610fae565b6109fc9190611037565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a5257600080fd5b505afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906110e0565b5050509150506402540be40081610aa1919061115b565b915050919050565b828054828255906000526020600020908101928215610b22579160200282015b82811115610b215782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610ac9565b5b509050610b2f9190610b33565b5090565b5b80821115610b4c576000816000905550600101610b34565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8082610b55565b9050919050565b610b9081610b75565b8114610b9b57600080fd5b50565b600081359050610bad81610b87565b92915050565b600060208284031215610bc957610bc8610b50565b5b6000610bd784828501610b9e565b91505092915050565b6000819050919050565b610bf381610be0565b82525050565b6000602082019050610c0e6000830184610bea565b92915050565b6000819050919050565b6000610c39610c34610c2f84610b55565b610c14565b610b55565b9050919050565b6000610c4b82610c1e565b9050919050565b6000610c5d82610c40565b9050919050565b610c6d81610c52565b82525050565b6000602082019050610c886000830184610c64565b92915050565b610c9781610b75565b82525050565b6000602082019050610cb26000830184610c8e565b92915050565b610cc181610be0565b8114610ccc57600080fd5b50565b600081359050610cde81610cb8565b92915050565b600060208284031215610cfa57610cf9610b50565b5b6000610d0884828501610ccf565b91505092915050565b600081519050610d2081610cb8565b92915050565b600060208284031215610d3c57610d3b610b50565b5b6000610d4a84828501610d11565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dbc82610be0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610def57610dee610d82565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e44600083610e29565b9150610e4f82610e34565b600082019050919050565b6000610e6582610e37565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610eb6600b83610e6f565b9150610ec182610e80565b602082019050919050565b60006020820190508181036000830152610ee581610ea9565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610f22601b83610e6f565b9150610f2d82610eec565b602082019050919050565b60006020820190508181036000830152610f5181610f15565b9050919050565b6000610f6382610be0565b9150610f6e83610be0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fa357610fa2610d82565b5b828201905092915050565b6000610fb982610be0565b9150610fc483610be0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ffd57610ffc610d82565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061104282610be0565b915061104d83610be0565b92508261105d5761105c611008565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61108781611068565b811461109257600080fd5b50565b6000815190506110a48161107e565b92915050565b6000819050919050565b6110bd816110aa565b81146110c857600080fd5b50565b6000815190506110da816110b4565b92915050565b600080600080600060a086880312156110fc576110fb610b50565b5b600061110a88828901611095565b955050602061111b888289016110cb565b945050604061112c88828901610d11565b935050606061113d88828901610d11565b925050608061114e88828901611095565b9150509295509295909350565b6000611166826110aa565b9150611171836110aa565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156111b0576111af610d82565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111ed576111ec610d82565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561122a57611229610d82565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561126757611266610d82565b5b82820290509291505056fea264697066735822122014eab805f22f04b45e63d4c934c56fe066aa9bc1083d9e45111a93758043146764736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100915760003560e01c8063893d20e811610059578063893d20e81461016b5780639e87a5cd14610196578063b60d4288146101c1578063be2693f0146101cb578063d7b4750c146101d557610091565b80630343fb25146100965780630d8e6e2c146100d35780630ec3b027146100fe5780633ccfd60b146101295780636b69a59214610140575b600080fd5b3480156100a257600080fd5b506100bd60048036038101906100b89190610bb3565b610212565b6040516100ca9190610bf9565b60405180910390f35b3480156100df57600080fd5b506100e861025a565b6040516100f59190610bf9565b60405180910390f35b34801561010a57600080fd5b506101136102f8565b6040516101209190610c73565b60405180910390f35b34801561013557600080fd5b5061013e61031e565b005b34801561014c57600080fd5b5061015561055e565b6040516101629190610bf9565b60405180910390f35b34801561017757600080fd5b5061018061056b565b60405161018d9190610c9d565b60405180910390f35b3480156101a257600080fd5b506101ab610593565b6040516101b89190610c73565b60405180910390f35b6101c96105bd565b005b6101d36106f7565b005b3480156101e157600080fd5b506101fc60048036038101906101f79190610ce4565b610985565b6040516102099190610c9d565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60008073d4a33860578de61dbabdc8bfdb98fd742fa7028e90508073ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156102ba57600080fd5b505afa1580156102ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102f29190610d26565b91505090565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103a3576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561044e576000600182815481106103c9576103c8610d53565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061044690610db1565b9150506103a6565b50600067ffffffffffffffff81111561046a57610469610dfa565b5b6040519080825280602002602001820160405280156104985781602001602082028036833780820191505090505b50600190805190602001906104ae929190610aa9565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104d590610e5a565b60006040518083038185875af1925050503d8060008114610512576040519150601f19603f3d011682016040523d82523d6000602084013e610517565b606091505b505090508061055b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055290610ecc565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6802b5e3af16b18800006105fc600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346109cd90919063ffffffff16565b101561063d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063490610f38565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461068b9190610f58565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461077c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000600180548060200260200160405190810160405280929190818152602001828054801561080057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116107b6575b5050505050905060005b815181101561088a57600082828151811061082857610827610d53565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061088290610db1565b91505061080a565b50600067ffffffffffffffff8111156108a6576108a5610dfa565b5b6040519080825280602002602001820160405280156108d45781602001602082028036833780820191505090505b50600190805190602001906108ea929190610aa9565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161093190610e5a565b60006040518083038185875af1925050503d806000811461096e576040519150601f19603f3d011682016040523d82523d6000602084013e610973565b606091505b505090508061098157600080fd5b5050565b60006001828154811061099b5761099a610d53565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109d983610a09565b90506000670de0b6b3a764000085836109f29190610fae565b6109fc9190611037565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a5257600080fd5b505afa158015610a66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a8a91906110e0565b5050509150506402540be40081610aa1919061115b565b915050919050565b828054828255906000526020600020908101928215610b22579160200282015b82811115610b215782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610ac9565b5b509050610b2f9190610b33565b5090565b5b80821115610b4c576000816000905550600101610b34565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b8082610b55565b9050919050565b610b9081610b75565b8114610b9b57600080fd5b50565b600081359050610bad81610b87565b92915050565b600060208284031215610bc957610bc8610b50565b5b6000610bd784828501610b9e565b91505092915050565b6000819050919050565b610bf381610be0565b82525050565b6000602082019050610c0e6000830184610bea565b92915050565b6000819050919050565b6000610c39610c34610c2f84610b55565b610c14565b610b55565b9050919050565b6000610c4b82610c1e565b9050919050565b6000610c5d82610c40565b9050919050565b610c6d81610c52565b82525050565b6000602082019050610c886000830184610c64565b92915050565b610c9781610b75565b82525050565b6000602082019050610cb26000830184610c8e565b92915050565b610cc181610be0565b8114610ccc57600080fd5b50565b600081359050610cde81610cb8565b92915050565b600060208284031215610cfa57610cf9610b50565b5b6000610d0884828501610ccf565b91505092915050565b600081519050610d2081610cb8565b92915050565b600060208284031215610d3c57610d3b610b50565b5b6000610d4a84828501610d11565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610dbc82610be0565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610def57610dee610d82565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e44600083610e29565b9150610e4f82610e34565b600082019050919050565b6000610e6582610e37565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610eb6600b83610e6f565b9150610ec182610e80565b602082019050919050565b60006020820190508181036000830152610ee581610ea9565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610f22601b83610e6f565b9150610f2d82610eec565b602082019050919050565b60006020820190508181036000830152610f5181610f15565b9050919050565b6000610f6382610be0565b9150610f6e83610be0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610fa357610fa2610d82565b5b828201905092915050565b6000610fb982610be0565b9150610fc483610be0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610ffd57610ffc610d82565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061104282610be0565b915061104d83610be0565b92508261105d5761105c611008565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61108781611068565b811461109257600080fd5b50565b6000815190506110a48161107e565b92915050565b6000819050919050565b6110bd816110aa565b81146110c857600080fd5b50565b6000815190506110da816110b4565b92915050565b600080600080600060a086880312156110fc576110fb610b50565b5b600061110a88828901611095565b955050602061111b888289016110cb565b945050604061112c88828901610d11565b935050606061113d88828901610d11565b925050608061114e88828901611095565b9150509295509295909350565b6000611166826110aa565b9150611171836110aa565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04821160008413600084131616156111b0576111af610d82565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111ed576111ec610d82565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561122a57611229610d82565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561126757611266610d82565b5b82820290509291505056fea264697066735822122014eab805f22f04b45e63d4c934c56fe066aa9bc1083d9e45111a93758043146764736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}